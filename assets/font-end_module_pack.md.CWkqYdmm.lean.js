import{_ as a,o as t,c as r,a3 as l}from"./chunks/framework.QX3Xs2QT.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"font-end/module/pack.md","filePath":"font-end/module/pack.md"}'),o={name:"font-end/module/pack.md"};function n(i,e,s,c,p,h){return t(),r("div",null,e[0]||(e[0]=[l('<h2 id="常见打包工具" tabindex="-1">常见打包工具 <a class="header-anchor" href="#常见打包工具" aria-label="Permalink to &quot;常见打包工具&quot;">​</a></h2><blockquote><p>rollup、webpack、vite</p></blockquote><h2 id="经过打包工具编译的和直接在html使用esm的执行区别" tabindex="-1">经过打包工具编译的和直接在html使用esm的执行区别 <a class="header-anchor" href="#经过打包工具编译的和直接在html使用esm的执行区别" aria-label="Permalink to &quot;经过打包工具编译的和直接在html使用esm的执行区别&quot;">​</a></h2><ul><li>直接在html中使用esm，会按照import顺序执行源文件</li><li>经过打包工具编译的（不同打包工具内部打包算法可能不一样，打包后一般会自动排除掉模块中未使用代码（排除模块源码中定义未使用的变量/函数）），比如rollup编译成umd会去除，比如webpack打包生产环境页面去除，打包开发环境没去除</li><li><a href="https://www.webpackjs.com/guides/tree-shaking/" target="_blank" rel="noreferrer">https://www.webpackjs.com/guides/tree-shaking/</a></li></ul><h2 id="打包优化-打包资源文件的同时生成对应的压缩文件-gz-浏览器请求压缩文件并解压。" tabindex="-1">打包优化: 打包资源文件的同时生成对应的压缩文件.gz，浏览器请求压缩文件并解压。 <a class="header-anchor" href="#打包优化-打包资源文件的同时生成对应的压缩文件-gz-浏览器请求压缩文件并解压。" aria-label="Permalink to &quot;打包优化: 打包资源文件的同时生成对应的压缩文件.gz，浏览器请求压缩文件并解压。&quot;">​</a></h2><h3 id="compressionwebpackplugin" tabindex="-1">CompressionWebpackPlugin <a class="header-anchor" href="#compressionwebpackplugin" aria-label="Permalink to &quot;CompressionWebpackPlugin&quot;">​</a></h3><blockquote><p><a href="https://segmentfault.com/a/1190000040268844" target="_blank" rel="noreferrer">https://segmentfault.com/a/1190000040268844</a><a href="https://blog.csdn.net/weixin_46002095/article/details/139334064" target="_blank" rel="noreferrer">https://blog.csdn.net/weixin_46002095/article/details/139334064</a></p></blockquote><h2 id="打包优化-chunksplit优化" tabindex="-1">打包优化：chunksplit优化 <a class="header-anchor" href="#打包优化-chunksplit优化" aria-label="Permalink to &quot;打包优化：chunksplit优化&quot;">​</a></h2><p>TODO</p>',9)]))}const u=a(o,[["render",n]]);export{m as __pageData,u as default};
